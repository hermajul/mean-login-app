{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/dashboard/dashboard.component.css","webpack:///./src/app/components/dashboard/dashboard.component.html","webpack:///./src/app/components/dashboard/dashboard.component.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/profile/dialog/confirm-dialog/confirm-dialog.component.css","webpack:///./src/app/components/profile/dialog/confirm-dialog/confirm-dialog.component.html","webpack:///./src/app/components/profile/dialog/confirm-dialog/confirm-dialog.component.ts","webpack:///./src/app/components/profile/profile.component.css","webpack:///./src/app/components/profile/profile.component.html","webpack:///./src/app/components/profile/profile.component.ts","webpack:///./src/app/components/signup/signup.component.css","webpack:///./src/app/components/signup/signup.component.html","webpack:///./src/app/components/signup/signup.component.ts","webpack:///./src/app/services/authentication.service.ts","webpack:///./src/app/services/dashboard/dashboard.service.ts","webpack:///./src/app/services/validation.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-navbar></app-navbar>\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { HttpModule } from '@angular/http';\n\nimport {RouterModule, Routes} from '@angular/router';\nimport { JwtModule } from '@auth0/angular-jwt';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\n\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport {\n  MatButtonModule,\n  MatMenuModule,\n  MatToolbarModule,\n  MatIconModule,\n  MatCardModule,\n  MatGridListModule,\n  MatSidenavModule,\n  MatSortModule,\n  MatTableModule,\n  MatInputModule,\n  MatSelectModule,\n  MatSliderModule,\n  MatRadioModule,\n  MatListModule,\n  MatProgressSpinnerModule,\n  MatChipsModule,\n  MatTooltipModule,\n  MatExpansionModule,\n  MatDialogModule,\n  MatAutocompleteModule,\n  MatTabsModule,\n  MatSlideToggleModule,\n  MatPaginatorModule,\n  MatCheckboxModule,\n  MatSnackBarModule,\n  MatButtonToggleModule\n} from '@angular/material';\n\nimport { AuthenticationService } from './services/authentication.service';\nimport { LoginComponent } from './components/login/login.component';\nimport { SignupComponent } from './components/signup/signup.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { ConfirmDialogComponent } from './components/profile/dialog/confirm-dialog/confirm-dialog.component';\n\nconst appRoutes: Routes =  [\n  {path: '', component: LoginComponent},\n  {path: 'signup', component: SignupComponent},\n  {path: 'profile', component: ProfileComponent},\n  {path: 'dashboard', component: DashboardComponent},\n];\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LoginComponent,\n    SignupComponent,\n    ProfileComponent,\n    DashboardComponent,\n    ConfirmDialogComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpModule,\n    RouterModule.forRoot(appRoutes),\n    JwtModule,\n    MatButtonModule,\n    MatMenuModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatCardModule,\n    MatGridListModule,\n    MatSidenavModule,\n    MatSortModule,\n    MatTableModule,\n    MatInputModule,\n    MatSelectModule,\n    MatSliderModule,\n    MatRadioModule,\n    MatListModule,\n    MatProgressSpinnerModule,\n    MatChipsModule,\n    MatTooltipModule,\n    MatExpansionModule,\n    MatDialogModule,\n    MatAutocompleteModule,\n    MatTabsModule,\n    MatSlideToggleModule,\n    MatPaginatorModule,\n    FlexLayoutModule,\n    MatCheckboxModule,\n    MatSnackBarModule,\n    MatButtonToggleModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [AuthenticationService],\n  bootstrap: [AppComponent],\n  entryComponents : [ConfirmDialogComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container mt-4\\\">\\n  <div class=\\\"row\\\">\\n      <div class=\\\"col-md-6 offset-md-3\\\">\\n        <form class=\\\"login-form\\\">\\n          <mat-card class=\\\"dashboard-card\\\" *ngIf=\\\"content\\\">\\n              <mat-card-header>                    \\n                  <mat-card-title>{{content.title}}</mat-card-title>\\n                </mat-card-header>\\n                <mat-card-content>{{content.msg}}</mat-card-content>\\n            </mat-card>\\n          </form>\\n      </div>       \\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\nimport { DashboardService} from 'src/app/services/dashboard/dashboard.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  content: any;\n\n  constructor(\n    private dashService: DashboardService\n  ) { }\n\n  ngOnInit() {\n    this.dashService.dashboard().subscribe(data => {\n      this.content = JSON.parse(data._body);\n    });\n  }\n\n}\n","module.exports = \"mat-form-field{\\n    width: 100%\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksV0FBVztDQUNkIiwiZmlsZSI6InNyYy9hcHAvY29tcG9uZW50cy9sb2dpbi9sb2dpbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWF0LWZvcm0tZmllbGR7XG4gICAgd2lkdGg6IDEwMCVcbn0iXX0= */\"","module.exports = \"<div class=\\\"container mt-4\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6 offset-md-3\\\">\\n          <form class=\\\"login-form\\\">\\n            <mat-card class=\\\"login-card\\\">\\n                <mat-card-header>                    \\n                    <mat-card-title>Login</mat-card-title>\\n                  </mat-card-header>\\n                  <mat-card-content>                    \\n                        <mat-form-field >\\n                          <input matInput placeholder=\\\"Email\\\" [(ngModel)]=\\\"user.email\\\" name=\\\"email\\\">\\n                        </mat-form-field>\\n                        <br>\\n                        <br>\\n                        <mat-form-field>\\n                            <input matInput placeholder=\\\"Password\\\" [type]=\\\"!hide ? 'password' : 'text'\\\" [(ngModel)]=\\\"user.password\\\" name=\\\"password\\\">\\n                            <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{!hide ? 'visibility' : 'visibility_off'}}</mat-icon>\\n                        </mat-form-field>  \\n                        <br>\\n                        <mat-error *ngIf=\\\"!this.response.success\\\">{{this.response.msg}}</mat-error>                    \\n                  </mat-card-content>\\n                  <mat-card-actions align=\\\"end\\\">\\n                    <button  mat-raised-button color=\\\"primary\\\" (click)=\\\"submit()\\\">Login</button>\\n                  </mat-card-actions>\\n              </mat-card>\\n            </form>\\n        </div>       \\n    </div>\\n    <br>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6 offset-md-3\\\">\\n            <mat-card class=\\\"login-card\\\">\\n                <mat-card-content>  \\n                  No account? <a [routerLink]=\\\"['/signup']\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions] = \\\"{exact:true}\\\">create an account.</a>                                   \\n                </mat-card-content>\\n              </mat-card>\\n        </div>       \\n    </div>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  user:   Object;\n  response:   any;\n\n  constructor(\n    private authService: AuthenticationService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.user = {\n      email     : '',\n      password  : ''\n    };\n    this.response = {\n      success : true,\n      msg     : ''\n    };\n  }\n\n  submit() {\n    this.authService.signin(this.user).subscribe(data => {\n      const res = JSON.parse(data._body);\n        if (res.success) {\n          this.authService.setSession(res.token);\n          this.router.navigate(['dashboard']);\n        } else {\n          this.response = res;\n        }\n    });\n  }\n\n}\n\n","module.exports = \".fill-remaining-space {\\n    /* This fills the remaining space, by using flexbox. \\n       Every toolbar row uses a flexbox row layout. */\\n    flex: 1 1 auto;\\n  }\\n.sidenav{\\n    width: 200px;\\n    background-color: gainsboro;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9uYXZiYXIvbmF2YmFyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSTtzREFDa0Q7SUFDbEQsZUFBZTtHQUNoQjtBQUNIO0lBQ0ksYUFBYTtJQUNiLDRCQUE0QjtDQUMvQiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbmF2YmFyL25hdmJhci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZpbGwtcmVtYWluaW5nLXNwYWNlIHtcbiAgICAvKiBUaGlzIGZpbGxzIHRoZSByZW1haW5pbmcgc3BhY2UsIGJ5IHVzaW5nIGZsZXhib3guIFxuICAgICAgIEV2ZXJ5IHRvb2xiYXIgcm93IHVzZXMgYSBmbGV4Ym94IHJvdyBsYXlvdXQuICovXG4gICAgZmxleDogMSAxIGF1dG87XG4gIH1cbi5zaWRlbmF2e1xuICAgIHdpZHRoOiAyMDBweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBnYWluc2Jvcm87XG59XG4iXX0= */\"","module.exports = \"<mat-sidenav-container class=\\\"sidenav-container\\\" fullscreen>\\n  <mat-sidenav\\n    #drawer\\n    class=\\\"sidenav\\\"\\n    fixedInViewport=\\\"true\\\"\\n    [attr.role]=\\\"isHandset ? 'dialog' : 'navigation'\\\"\\n    [mode]=\\\"(isHandset | async) ? 'over' : 'side'\\\"\\n    [opened]=\\\"!(isHandset | async)\\\">\\n    <mat-toolbar color=\\\"primary\\\">Menu</mat-toolbar>\\n    <mat-nav-list> \\n        <!-- list items when user not logged in-->\\n        <a mat-list-item [routerLink]=\\\"['']\\\" *ngIf=\\\"!authService.isLoggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions] = \\\"{exact:true}\\\">Login</a>\\n        <a mat-list-item [routerLink]=\\\"['/signup']\\\" *ngIf=\\\"!authService.isLoggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions] = \\\"{exact:true}\\\">Signup</a>    \\n        <!-- list items when user logged in-->\\n        <a mat-list-item [routerLink]=\\\"['/profile']\\\" *ngIf=\\\"authService.isLoggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions] = \\\"{exact:true}\\\">Profile</a>\\n        <a mat-list-item [routerLink]=\\\"['/dashboard']\\\" *ngIf=\\\"authService.isLoggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions] = \\\"{exact:true}\\\">Dashboard</a>  \\n    </mat-nav-list>\\n  </mat-sidenav>\\n  <mat-sidenav-content>\\n    <mat-toolbar color=\\\"primary\\\">\\n      <button\\n        type=\\\"button\\\"\\n        aria-label=\\\"Toggle sidenav\\\"\\n        mat-icon-button\\n        (click)=\\\"drawer.toggle()\\\">\\n        <i class=\\\"material-icons\\\">menu</i>\\n      </button>\\n      <span>angular</span>\\n      <span class=\\\"fill-remaining-space\\\"></span>\\n\\n      <button mat-button *ngIf=\\\"authService.isLoggedIn()\\\" [matMenuTriggerFor]=\\\"menu\\\" ><i class=\\\"material-icons\\\">account_circle</i></button>          \\n      <mat-menu #menu=\\\"matMenu\\\">\\n        <button mat-menu-item disabled >\\n          <span *ngIf=\\\"authService.user!=null\\\">{{authService.user.name}}</span>\\n        </button>\\n        <button mat-menu-item disabled>\\n          <mat-icon>email</mat-icon>\\n          <span *ngIf=\\\"authService.user!=null\\\">{{authService.user.email}}</span>\\n        </button>\\n        <button mat-menu-item (click)=\\\"logout()\\\">\\n          <mat-icon>power_settings_new</mat-icon>\\n          <span>Logout</span>\\n        </button>\\n      </mat-menu>\\n    </mat-toolbar>\\n    <router-outlet></router-outlet>    \\n  </mat-sidenav-content>\\n</mat-sidenav-container>\"","import { Component, OnInit } from '@angular/core';\nimport { BreakpointObserver, Breakpoints, BreakpointState } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  isHandset: Observable<BreakpointState> = this.breakpointObserver.observe(Breakpoints.Handset);\n\n  constructor(\n    private authService: AuthenticationService,\n    private breakpointObserver: BreakpointObserver,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    if (this.authService.isLoggedIn()) {\n      // this.router.navigate(['/dashboard']);\n    }\n  }\n  logout() {\n    this.authService.logout();\n    this.router.navigate(['']);\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcHJvZmlsZS9kaWFsb2cvY29uZmlybS1kaWFsb2cvY29uZmlybS1kaWFsb2cuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<h1 mat-dialog-title>{{data.title}}</h1>\\n<div mat-dialog-content>\\n  <p>{{data.message}}</p>\\n</div>\\n<div mat-dialog-actions align=\\\"end\\\">\\n  <button mat-button [mat-dialog-close]=\\\"false\\\">No</button>\\n  <button mat-button [mat-dialog-close]=\\\"true\\\" cdkFocusInitial>Yes</button>\\n</div>\"","import { Component, Inject } from '@angular/core';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\n\nexport interface DialogData {\n  title: string;\n  message: string;\n}\n\n@Component({\n  selector: 'app-confirm-dialog',\n  templateUrl: './confirm-dialog.component.html',\n  styleUrls: ['./confirm-dialog.component.css']\n})\nexport class ConfirmDialogComponent {\n\n  constructor(\n    public dialogRef: MatDialogRef<ConfirmDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData) {}\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n","module.exports = \"mat-form-field{\\n    width: 100%\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9wcm9maWxlL3Byb2ZpbGUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFdBQVc7Q0FDZCIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcHJvZmlsZS9wcm9maWxlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtZm9ybS1maWVsZHtcbiAgICB3aWR0aDogMTAwJVxufSJdfQ== */\"","module.exports = \"<div class=\\\"container mt-4\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6 offset-md-3\\\">\\n          <form class=\\\"login-form\\\">\\n            <mat-card class=\\\"login-card\\\">\\n                <mat-card-header>                    \\n                    <mat-card-title>User Info</mat-card-title>\\n                  </mat-card-header>\\n                  <mat-card-content>\\n                        <mat-form-field >\\n                                <input matInput placeholder=\\\"Name\\\" [formControl]=\\\"nameControl\\\" required>\\n                                <mat-error *ngIf=\\\"nameControl.hasError('nameValidator')\\\">{{nameControl.errors.nameValidatorMsg}}</mat-error>\\n                            </mat-form-field>                        \\n                            <br>\\n                            <br>                    \\n                            <mat-form-field >\\n                                <input matInput placeholder=\\\"Email\\\" [formControl]=\\\"emailControl\\\" required>\\n                                <mat-error *ngIf=\\\"emailControl.hasError('emailValidator')\\\">{{this.emailControl.errors.emailValidatorMsg}}</mat-error>\\n                            </mat-form-field>  \\n                            <br>\\n                            <br>\\n                            <mat-form-field>\\n                                <input matInput placeholder=\\\"Password\\\" [type]=\\\"!hide ? 'password' : 'text'\\\" [formControl]=\\\"pwControl\\\" required>\\n                                <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{!hide ? 'visibility' : 'visibility_off'}}</mat-icon>\\n                                <mat-error *ngIf=\\\"pwControl.hasError('pwValidator')\\\"><span *ngFor=\\\"let item of pwControl.errors.pwValidatorMsg\\\">{{item}}<br></span></mat-error>   \\n                            </mat-form-field>                     \\n                  </mat-card-content>\\n                  <mat-card-actions align=\\\"end\\\">\\n                    <button  mat-raised-button color=\\\"warn\\\" *ngIf=\\\"!edit\\\"(click)=\\\"confirmDelete()\\\"><mat-icon>delete_outline</mat-icon> delete</button>\\n                    <button  mat-raised-button color=\\\"primary\\\" *ngIf=\\\"!edit\\\"(click)=\\\"editMode(true)\\\"><mat-icon>create</mat-icon> edit</button>\\n                    <button  mat-raised-button color=\\\"primary\\\" *ngIf=\\\"edit\\\" (click)=\\\"editMode(false)\\\">discard changes</button>\\n                    <button  mat-raised-button color=\\\"primary\\\" *ngIf=\\\"edit\\\" (click)=\\\"submit()\\\" [disabled]=\\\"!nameControl.valid || !emailControl.valid || !pwControl.valid\\\">save changes</button>\\n                    <mat-error *ngIf=\\\"!response.success\\\">{{this.response.msg}}</mat-error>\\n                  </mat-card-actions>\\n              </mat-card>\\n            </form>\\n        </div>       \\n    </div>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\nimport { ValidationService } from 'src/app/services/validation.service';\nimport { FormControl, AbstractControl } from '@angular/forms';\nimport { map } from 'rxjs/operators';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\nimport {ConfirmDialogComponent} from './dialog/confirm-dialog/confirm-dialog.component';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  newuser:  Object;\n  response:  any;\n  edit:  boolean;\n  nameControl: FormControl;\n  emailControl: FormControl;\n  pwControl: FormControl;\n\n  constructor(\n    private authService: AuthenticationService,\n    private validService: ValidationService,\n    public dialog: MatDialog,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.newuser = {\n      _id      : this.authService.user._id,\n      name     : this.authService.user.name,\n      email    : this.authService.user.email,\n      password : ''\n    };\n    this.nameControl  = new FormControl(\n      {value: this.authService.user['name'], disabled: true}, {validators: [this.nameValidator.bind(this)], updateOn: 'blur'}\n      );\n    this.emailControl = new FormControl({value: this.authService.user['email'], disabled: true}, [this.emailValidator.bind(this)]);\n    this.pwControl    = new FormControl({value: '', disabled: true}, [this.pwValidator.bind(this)]);\n    this.edit = false;\n    this.response = {\n      success : true,\n      msg     : ''\n    };\n  }\n  editMode(state) {\n    this.edit = state;\n    if (state) {\n      this.nameControl.enable();\n      this.emailControl.enable();\n      this.pwControl.enable();\n    } else {\n      this.nameControl.disable();\n      this.emailControl.disable();\n      this.pwControl.disable();\n      this.nameControl.setValue(this.authService.user['name']);\n      this.emailControl.setValue(this.authService.user['email']);\n      this.pwControl.setValue('');\n    }\n  }\n  isDisabled() {\n    return !this.edit;\n  }\n  submit() {\n    let user = {\n      name      :  this.nameControl.value,\n      email     :  this.emailControl.value,\n      password  :  this.pwControl.value\n    };\n    this.authService.updateUser(user).subscribe(data => {\n      const res = JSON.parse(data._body);\n      if (res.success) {\n        this.editMode(false);\n        this.authService.signin(user).subscribe(payload => {\n          const result = JSON.parse(payload._body);\n            if (result.success) {\n              this.authService.setSession(result.token);\n              user = null;\n              this.newuser['password'] = '';\n              this.pwControl.setValue('');\n              this.nameControl.setValue(this.authService.user['name']);\n              this.emailControl.setValue(this.authService.user['email']);\n            } else {\n              this.response = result;\n            }\n        });\n      } else {\n        this.response = res;\n      }\n    });\n  }\n  nameValidator(control: AbstractControl) {\n    const msg = {name: control.value};\n    return this.validService.checkName(msg)\n    .pipe(  map( response => response.json()),\n            map( val => {\n              return {nameValidator : !val.valid, nameValidatorMsg: val.msg};\n            }),\n    ).subscribe(val => {\n      if (val.nameValidator) {\n        control.setErrors(val);\n      } else {\n        control.setErrors(null);\n      }\n    });\n  }\n\n  emailValidator(control: AbstractControl) {\n    const msg = {newEmail: control.value, oldEmail: this.authService.user.email};\n    return this.validService.checkEmailOnUpdate(msg)\n    .pipe(  map( response => response.json()),\n            map( val => {\n              return {emailValidator : !val.valid, emailValidatorMsg: val.msg};\n            }),\n    ).subscribe(val => {\n      if (val.emailValidator) {\n        control.setErrors(val);\n      } else {\n        control.setErrors(null);\n      }\n    });\n  }\n\n  pwValidator(control: AbstractControl) {\n    const msg = {pw: control.value};\n    return this.validService.checkPw(msg)\n    .pipe(  map( response => response.json()),\n            map( val => {\n              return {pwValidator : !val.valid, pwValidatorMsg: val.msg};\n            }),\n    ).subscribe(val => {\n      if (val.pwValidator) {\n\n        control.setErrors(val);\n      } else {\n        control.setErrors(null);\n      }\n    });\n  }\n\n  confirmDelete() {\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      width: '500px',\n      data: {title: 'Delete', message: 'Are you sure you want to delete the account?'}\n    });\n    dialogRef.afterClosed().subscribe(response => {\n      if (response === true) {\n        this.authService.deleteUser().subscribe(payload => {\n          const result = JSON.parse(payload._body);\n            if (result.success) {\n              this.authService.logout();\n              this.router.navigate(['']);\n            } else {\n              this.response = result;\n            }\n        });\n      }\n    });\n  }\n}\n","module.exports = \"mat-form-field{\\n    width: 100%\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9zaWdudXAvc2lnbnVwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxXQUFXO0NBQ2QiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL3NpZ251cC9zaWdudXAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIm1hdC1mb3JtLWZpZWxke1xuICAgIHdpZHRoOiAxMDAlXG59Il19 */\"","module.exports = \"<div class=\\\"container mt-4\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6 offset-md-3\\\">\\n          <form class=\\\"login-form\\\">\\n            <mat-card class=\\\"login-card\\\">\\n                <mat-card-header>                    \\n                    <mat-card-title>Signup</mat-card-title>\\n                  </mat-card-header>\\n                  <mat-card-content>\\n                      <mat-form-field >\\n                            <input matInput placeholder=\\\"Name\\\" [formControl]=\\\"nameControl\\\" required>\\n                            <mat-error *ngIf=\\\"nameControl.hasError('nameValidator')\\\">{{nameControl.errors.nameValidatorMsg}}</mat-error>\\n                        </mat-form-field>                        \\n                        <br>\\n                        <br>                    \\n                        <mat-form-field >\\n                            <input matInput placeholder=\\\"Email\\\" [formControl]=\\\"emailControl\\\" required>\\n                            <mat-error *ngIf=\\\"emailControl.hasError('emailValidator')\\\">{{this.emailControl.errors.emailValidatorMsg}}</mat-error>\\n                        </mat-form-field>  \\n                        <br>\\n                        <br>\\n                        <mat-form-field>\\n                            <input matInput placeholder=\\\"Password\\\" [type]=\\\"!hide ? 'password' : 'text'\\\" [formControl]=\\\"pwControl\\\" required>\\n                            <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{!hide ? 'visibility' : 'visibility_off'}}</mat-icon>\\n                            <mat-error *ngIf=\\\"pwControl.hasError('pwValidator')\\\"><span *ngFor=\\\"let item of pwControl.errors.pwValidatorMsg\\\">{{item}}<br></span></mat-error>   \\n                        </mat-form-field>                              \\n                  </mat-card-content>\\n                  <mat-card-actions align=\\\"end\\\">\\n                    <button  mat-raised-button color=\\\"primary\\\" (click)=\\\"submit()\\\" [disabled]=\\\"!nameControl.valid || !emailControl.valid || !pwControl.valid\\\">create an account</button> \\n                  </mat-card-actions>\\n                  <mat-error *ngFor=\\\"let item of state.msg\\\">{{item}}</mat-error> \\n              </mat-card>\\n            </form>\\n        </div>       \\n    </div>\\n  </div>\\n\\n  <!--\\n      <mat-form-field >\\n                          <input matInput placeholder=\\\"Email\\\" name=\\\"email\\\" [formControl]=\\\"emailControl\\\" required >\\n                          <mat-error *ngIf=\\\"!emailControl.hasError('required') && !emailControl.hasError('emailValidator')\\\">\\n                              use a valid email adress\\n                          </mat-error>\\n                        </mat-form-field>\\n                        <br>\\n                        <br>\\n                        <mat-form-field >\\n                            <input matInput placeholder=\\\"Password\\\" [type]=\\\"!hide ? 'password' : 'text'\\\" name=\\\"password\\\" [formControl]=\\\"pwControl\\\" required >\\n                            <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{!hide ? 'visibility' : 'visibility_off'}}</mat-icon>\\n                            <mat-error *ngIf=\\\"!pwControl.hasError('required') && !pwControl.hasError('pwValidator')\\\">\\n                                    use a valid password\\n                            </mat-error>\\n                        </mat-form-field>  \\n  -->\"","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\nimport { ValidationService } from 'src/app/services/validation.service';\nimport { Router } from '@angular/router';\nimport { FormControl, AbstractControl } from '@angular/forms';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n  state: any;\n  nameControl: FormControl;\n  emailControl: FormControl;\n  pwControl: FormControl;\n\n  constructor(\n    private authService: AuthenticationService,\n    private router: Router,\n    private validService: ValidationService\n  ) { }\n\n  ngOnInit() {\n    this.nameControl  = new FormControl('', {validators: [this.nameValidator.bind(this)], updateOn: 'blur'});\n    this.emailControl = new FormControl('', [this.emailValidator.bind(this)]);\n    this.pwControl    = new FormControl('', [this.pwValidator.bind(this)]);\n    this.state = {success: true};\n  }\n\n  submit() {\n    const user = {\n      name      :  this.nameControl.value,\n      email     :  this.emailControl.value,\n      password  :  this.pwControl.value\n    };\n    this.authService.signup(user).subscribe(data => {\n      const res = JSON.parse(data._body);\n      if (res.success) {\n        this.router.navigate(['']);\n      } else {\n        this.state = res;\n      }\n    });\n  }\n\n  nameValidator(control: AbstractControl) {\n    const msg = {name: control.value};\n    return this.validService.checkName(msg)\n    .pipe(  map( response => response.json()),\n            map( val => {\n              return {nameValidator : !val.valid, nameValidatorMsg: val.msg};\n            }),\n    ).subscribe(val => {\n      if (val.nameValidator) {\n        control.setErrors(val);\n      } else {\n        control.setErrors(null);\n      }\n    });\n  }\n\n  emailValidator(control: AbstractControl) {\n    const msg = {email: control.value};\n    return this.validService.checkEmail(msg)\n    .pipe(  map( response => response.json()),\n            map( val => {\n              return {emailValidator : !val.valid, emailValidatorMsg: val.msg};\n            }),\n    ).subscribe(val => {\n      if (val.emailValidator) {\n        control.setErrors(val);\n      } else {\n        control.setErrors(null);\n      }\n    });\n  }\n\n  pwValidator(control: AbstractControl) {\n    const msg = {pw: control.value};\n    return this.validService.checkPw(msg)\n    .pipe(  map( response => response.json()),\n            map( val => {\n              return {pwValidator : !val.valid, pwValidatorMsg: val.msg};\n            }),\n    ).subscribe(val => {\n      if (val.pwValidator) {\n\n        control.setErrors(val);\n      } else {\n        control.setErrors(null);\n      }\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\nimport { Observable } from 'rxjs';\nimport {JwtHelperService} from '@auth0/angular-jwt';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  token: any;\n  user: any;\n\n  constructor(\n    private http: Http,\n    ) { }\n\n  getUser() {\n    this.loadToken();\n    return this.user;\n  }\n  getToken() {\n    this.loadToken();\n    return this.token;\n  }\n\n  signin(user): Observable<any> {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('users/signin', user, {headers: headers});\n  }\n  signup(user): Observable<any> {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('users/signup', user, {headers: headers});\n  }\n  setSession(token) {\n    const helper = new JwtHelperService();\n    const decoded = helper.decodeToken(token);\n    localStorage.setItem('id_token', token);\n    localStorage.setItem('user', JSON.stringify(decoded.data));\n    this.token = token;\n    this.user = decoded.data;\n  }\n  loadToken() {\n    const token = localStorage.getItem('id_token');\n    const user  = JSON.parse(localStorage.getItem('user'));\n    this.token  = token;\n    this.user   = user;\n  }\n  isLoggedIn() {\n    const helper = new JwtHelperService();\n    this.loadToken();\n    return !helper.isTokenExpired(this.token);\n  }\n  logout() {\n    this.token  = null;\n    this.user   = null;\n    localStorage.clear();\n  }\n  updateUser(newuser): Observable<any> {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', this.token);\n    return this.http.post('users/update', newuser, {headers: headers});\n  }\n  deleteUser(): Observable<any> {\n    this.loadToken();\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', this.token);\n    return this.http.post('users/delete',{}, {headers: headers});\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\nimport { Observable } from 'rxjs';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\nimport {JwtHelperService} from '@auth0/angular-jwt';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DashboardService {\n\n  constructor(\n    private http: Http,\n    private authService: AuthenticationService\n  ) { }\n\n  dashboard(): Observable<any> {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', this.authService.getToken());\n    return this.http.post('dashboard/welcome', {}, {headers: headers});\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidationService {\n\n  constructor(\n    private http: Http,\n  ) { }\n\n  checkName(name): Observable<any> {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('validators/namevalidator', name, {headers: headers});\n  }\n  checkEmail(email): Observable<any> {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('validators/emailvalidator', email, {headers: headers});\n  }\n  checkEmailOnUpdate(email): Observable<any> {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('validators/emailonupdatevalidator', email, {headers: headers});\n  }\n  checkPw(pw): Observable<any> {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('validators/pwvalidator', pw, {headers: headers});\n  }\n}\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}