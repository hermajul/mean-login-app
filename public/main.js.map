{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/dashboard/dashboard.component.css","webpack:///./src/app/components/dashboard/dashboard.component.html","webpack:///./src/app/components/dashboard/dashboard.component.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/profile/profile.component.css","webpack:///./src/app/components/profile/profile.component.html","webpack:///./src/app/components/profile/profile.component.ts","webpack:///./src/app/components/signup/signup.component.css","webpack:///./src/app/components/signup/signup.component.html","webpack:///./src/app/components/signup/signup.component.ts","webpack:///./src/app/services/authentication.service.ts","webpack:///./src/app/services/dashboard/dashboard.service.ts","webpack:///./src/app/services/validation.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvYXBwLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-navbar></app-navbar>\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { HttpModule } from '@angular/http';\n\nimport {RouterModule, Routes} from '@angular/router';\nimport { JwtModule } from '@auth0/angular-jwt';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\n\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport {\n  MatButtonModule,\n  MatMenuModule,\n  MatToolbarModule,\n  MatIconModule,\n  MatCardModule,\n  MatGridListModule,\n  MatSidenavModule,\n  MatSortModule,\n  MatTableModule,\n  MatInputModule,\n  MatSelectModule,\n  MatSliderModule,\n  MatRadioModule,\n  MatListModule,\n  MatProgressSpinnerModule,\n  MatChipsModule,\n  MatTooltipModule,\n  MatExpansionModule,\n  MatDialogModule,\n  MatAutocompleteModule,\n  MatTabsModule,\n  MatSlideToggleModule,\n  MatPaginatorModule,\n  MatCheckboxModule,\n  MatSnackBarModule,\n  MatButtonToggleModule\n} from '@angular/material';\n\nimport { AuthenticationService } from './services/authentication.service';\nimport { LoginComponent } from './components/login/login.component';\nimport { SignupComponent } from './components/signup/signup.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\n\nconst appRoutes: Routes =  [\n  {path:'', component: LoginComponent},\n  {path:'signup', component: SignupComponent},\n  {path:'profile', component: ProfileComponent},\n  {path:'dashboard', component: DashboardComponent},\n]\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LoginComponent,\n    SignupComponent,\n    ProfileComponent,\n    DashboardComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpModule,\n    RouterModule.forRoot(appRoutes),\n    JwtModule,\n    MatButtonModule,\n    MatMenuModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatCardModule,\n    MatGridListModule,\n    MatSidenavModule,\n    MatSortModule,\n    MatTableModule,\n    MatInputModule,\n    MatSelectModule,\n    MatSliderModule,\n    MatRadioModule,\n    MatListModule,\n    MatProgressSpinnerModule,\n    MatChipsModule,\n    MatTooltipModule,\n    MatExpansionModule,\n    MatDialogModule,\n    MatAutocompleteModule,\n    MatTabsModule,\n    MatSlideToggleModule,\n    MatPaginatorModule,\n    FlexLayoutModule,\n    MatCheckboxModule,\n    MatSnackBarModule,\n    MatButtonToggleModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [AuthenticationService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAvY29tcG9uZW50cy9kYXNoYm9hcmQvZGFzaGJvYXJkLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"container mt-4\\\">\\n  <div class=\\\"row\\\">\\n      <div class=\\\"col-md-6 offset-md-3\\\">\\n        <form class=\\\"login-form\\\">\\n          <mat-card class=\\\"dashboard-card\\\" *ngIf=\\\"content\\\">\\n              <mat-card-header>                    \\n                  <mat-card-title>{{content.title}}</mat-card-title>\\n                </mat-card-header>\\n                <mat-card-content>{{content.msg}}</mat-card-content>\\n            </mat-card>\\n          </form>\\n      </div>       \\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\nimport { DashboardService} from 'src/app/services/dashboard/dashboard.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  content : any;\n\n  constructor(\n    private dashService : DashboardService\n  ) { }\n\n  ngOnInit() {\n    this.dashService.dashboard().subscribe(data => {\n      this.content = JSON.parse(data._body);\n    });\n  }\n\n}\n","module.exports = \"mat-form-field{\\n    width: 100%\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9jb21wb25lbnRzL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxXQUFXO0NBQ2QiLCJmaWxlIjoiYXBwL2NvbXBvbmVudHMvbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIm1hdC1mb3JtLWZpZWxke1xuICAgIHdpZHRoOiAxMDAlXG59Il19 */\"","module.exports = \"<div class=\\\"container mt-4\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6 offset-md-3\\\">\\n          <form class=\\\"login-form\\\">\\n            <mat-card class=\\\"login-card\\\">\\n                <mat-card-header>                    \\n                    <mat-card-title>Login</mat-card-title>\\n                  </mat-card-header>\\n                  <mat-card-content>                    \\n                        <mat-form-field >\\n                          <input matInput placeholder=\\\"Email\\\" [(ngModel)]=\\\"user.email\\\" name=\\\"email\\\">\\n                        </mat-form-field>\\n                        <br>\\n                        <br>\\n                        <mat-form-field>\\n                            <input matInput placeholder=\\\"Password\\\" [type]=\\\"!hide ? 'password' : 'text'\\\" [(ngModel)]=\\\"user.password\\\" name=\\\"password\\\">\\n                            <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{!hide ? 'visibility' : 'visibility_off'}}</mat-icon>\\n                        </mat-form-field>  \\n                        <br>\\n                        <mat-error *ngIf=\\\"!this.response.success\\\">{{this.response.msg}}</mat-error>                    \\n                  </mat-card-content>\\n                  <mat-card-actions align=\\\"end\\\">\\n                    <button  mat-raised-button color=\\\"primary\\\" (click)=\\\"submit()\\\">Login</button>\\n                  </mat-card-actions>\\n              </mat-card>\\n            </form>\\n        </div>       \\n    </div>\\n    <br>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6 offset-md-3\\\">\\n            <mat-card class=\\\"login-card\\\">\\n                <mat-card-content>  \\n                  No account? <a [routerLink]=\\\"['/signup']\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions] = \\\"{exact:true}\\\">create an account.</a>                                   \\n                </mat-card-content>\\n              </mat-card>\\n        </div>       \\n    </div>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  user      :   Object;\n  response  :   any;\n\n  constructor(\n    private authService: AuthenticationService,\n    private router      : Router\n  ) { }\n\n  ngOnInit() {\n    this.user = {\n      email     : \"\",\n      password  : \"\"\n    }\n    this.response = {\n      success : true,\n      msg     : \"\"\n    }\n  }\n\n  submit(){\n    this.authService.signin(this.user).subscribe(data => {\n      var res = JSON.parse(data._body);\n        if(res.success) {\n          this.authService.setSession(res.token);\n          this.router.navigate(['dashboard']);\n        } else {\n          this.response = res;\n        }\n    });\n  }\n\n}\n\n","module.exports = \".fill-remaining-space {\\n    /* This fills the remaining space, by using flexbox. \\n       Every toolbar row uses a flexbox row layout. */\\n    flex: 1 1 auto;\\n  }\\n.sidenav{\\n    width: 200px;\\n    background-color: gainsboro;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9jb21wb25lbnRzL25hdmJhci9uYXZiYXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJO3NEQUNrRDtJQUNsRCxlQUFlO0dBQ2hCO0FBQ0g7SUFDSSxhQUFhO0lBQ2IsNEJBQTRCO0NBQy9CIiwiZmlsZSI6ImFwcC9jb21wb25lbnRzL25hdmJhci9uYXZiYXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5maWxsLXJlbWFpbmluZy1zcGFjZSB7XG4gICAgLyogVGhpcyBmaWxscyB0aGUgcmVtYWluaW5nIHNwYWNlLCBieSB1c2luZyBmbGV4Ym94LiBcbiAgICAgICBFdmVyeSB0b29sYmFyIHJvdyB1c2VzIGEgZmxleGJveCByb3cgbGF5b3V0LiAqL1xuICAgIGZsZXg6IDEgMSBhdXRvO1xuICB9XG4uc2lkZW5hdntcbiAgICB3aWR0aDogMjAwcHg7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogZ2FpbnNib3JvO1xufVxuIl19 */\"","module.exports = \"<mat-sidenav-container class=\\\"sidenav-container\\\" fullscreen>\\n  <mat-sidenav\\n    #drawer\\n    class=\\\"sidenav\\\"\\n    fixedInViewport=\\\"true\\\"\\n    [attr.role]=\\\"isHandset ? 'dialog' : 'navigation'\\\"\\n    [mode]=\\\"(isHandset | async) ? 'over' : 'side'\\\"\\n    [opened]=\\\"!(isHandset | async)\\\">\\n    <mat-toolbar color=\\\"primary\\\">Menu</mat-toolbar>\\n    <mat-nav-list> \\n        <!-- list items when user not logged in-->\\n        <a mat-list-item [routerLink]=\\\"['']\\\" *ngIf=\\\"!authService.isLoggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions] = \\\"{exact:true}\\\">Login</a>\\n        <a mat-list-item [routerLink]=\\\"['/signup']\\\" *ngIf=\\\"!authService.isLoggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions] = \\\"{exact:true}\\\">Signup</a>    \\n        <!-- list items when user logged in-->\\n        <a mat-list-item [routerLink]=\\\"['/profile']\\\" *ngIf=\\\"authService.isLoggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions] = \\\"{exact:true}\\\">Profile</a>\\n        <a mat-list-item [routerLink]=\\\"['/dashboard']\\\" *ngIf=\\\"authService.isLoggedIn()\\\" [routerLinkActive]=\\\"['active']\\\" [routerLinkActiveOptions] = \\\"{exact:true}\\\">Dashboard</a>  \\n    </mat-nav-list>\\n  </mat-sidenav>\\n  <mat-sidenav-content>\\n    <mat-toolbar color=\\\"primary\\\">\\n      <button\\n        type=\\\"button\\\"\\n        aria-label=\\\"Toggle sidenav\\\"\\n        mat-icon-button\\n        (click)=\\\"drawer.toggle()\\\">\\n        <i class=\\\"material-icons\\\">menu</i>\\n      </button>\\n      <span>angular</span>\\n      <span class=\\\"fill-remaining-space\\\"></span>\\n\\n      <button mat-button *ngIf=\\\"authService.isLoggedIn()\\\" [matMenuTriggerFor]=\\\"menu\\\" ><i class=\\\"material-icons\\\">account_circle</i></button>          \\n      <mat-menu #menu=\\\"matMenu\\\">\\n        <button mat-menu-item disabled >\\n          <span *ngIf=\\\"authService.user!=null\\\">{{authService.user.name}}</span>\\n        </button>\\n        <button mat-menu-item disabled>\\n          <mat-icon>email</mat-icon>\\n          <span *ngIf=\\\"authService.user!=null\\\">{{authService.user.email}}</span>\\n        </button>\\n        <button mat-menu-item (click)=\\\"logout()\\\">\\n          <mat-icon>power_settings_new</mat-icon>\\n          <span>Logout</span>\\n        </button>\\n      </mat-menu>\\n    </mat-toolbar>\\n    <router-outlet></router-outlet>    \\n  </mat-sidenav-content>\\n</mat-sidenav-container>\"","import { Component, OnInit } from '@angular/core';\nimport { BreakpointObserver, Breakpoints, BreakpointState } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  isHandset: Observable<BreakpointState> = this.breakpointObserver.observe(Breakpoints.Handset);  \n\n  constructor(\n    private authService       : AuthenticationService,\n    private breakpointObserver: BreakpointObserver,\n    private router            : Router\n  ) { }\n\n  ngOnInit() {\n    if(this.authService.isLoggedIn()){\n      //this.router.navigate(['/dashboard']);\n    }\n  }\n  logout(){\n    this.authService.logout();\n    this.router.navigate(['']);\n  }\n\n}\n","module.exports = \"mat-form-field{\\n    width: 100%\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9jb21wb25lbnRzL3Byb2ZpbGUvcHJvZmlsZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksV0FBVztDQUNkIiwiZmlsZSI6ImFwcC9jb21wb25lbnRzL3Byb2ZpbGUvcHJvZmlsZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWF0LWZvcm0tZmllbGR7XG4gICAgd2lkdGg6IDEwMCVcbn0iXX0= */\"","module.exports = \"<div class=\\\"container mt-4\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6 offset-md-3\\\">\\n          <form class=\\\"login-form\\\">\\n            <mat-card class=\\\"login-card\\\">\\n                <mat-card-header>                    \\n                    <mat-card-title>User Info</mat-card-title>\\n                  </mat-card-header>\\n                  <mat-card-content>\\n                        <mat-form-field >\\n                                <input matInput placeholder=\\\"Name\\\" [formControl]=\\\"nameControl\\\" required>\\n                                <mat-error *ngIf=\\\"nameControl.hasError('nameValidator')\\\">{{nameControl.errors.nameValidatorMsg}}</mat-error>\\n                            </mat-form-field>                        \\n                            <br>\\n                            <br>                    \\n                            <mat-form-field >\\n                                <input matInput placeholder=\\\"Email\\\" [formControl]=\\\"emailControl\\\" required>\\n                                <mat-error *ngIf=\\\"emailControl.hasError('emailValidator')\\\">{{this.emailControl.errors.emailValidatorMsg}}</mat-error>\\n                            </mat-form-field>  \\n                            <br>\\n                            <br>\\n                            <mat-form-field>\\n                                <input matInput placeholder=\\\"Password\\\" [type]=\\\"!hide ? 'password' : 'text'\\\" [formControl]=\\\"pwControl\\\" required>\\n                                <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{!hide ? 'visibility' : 'visibility_off'}}</mat-icon>\\n                                <mat-error *ngIf=\\\"pwControl.hasError('pwValidator')\\\"><span *ngFor=\\\"let item of pwControl.errors.pwValidatorMsg\\\">{{item}}<br></span></mat-error>   \\n                            </mat-form-field>                     \\n                  </mat-card-content>\\n                  <mat-card-actions align=\\\"end\\\">\\n                    <button  mat-raised-button color=\\\"primary\\\" *ngIf=\\\"!edit\\\"(click)=\\\"editMode(true)\\\"><mat-icon>create</mat-icon> edit</button>\\n                    <button  mat-raised-button color=\\\"primary\\\" *ngIf=\\\"edit\\\" (click)=\\\"editMode(false)\\\">discard changes</button>\\n                    <button  mat-raised-button color=\\\"primary\\\" *ngIf=\\\"edit\\\" (click)=\\\"submit()\\\" [disabled]=\\\"!nameControl.valid || !emailControl.valid || !pwControl.valid\\\">save changes</button>\\n                  </mat-card-actions>\\n              </mat-card>\\n            </form>\\n        </div>       \\n    </div>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\nimport { ValidationService } from 'src/app/services/validation.service';\nimport { FormControl, AbstractControl } from '@angular/forms';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  newuser   :  Object;\n  response  :  any;\n  edit      :  boolean;  \n  nameControl : FormControl;\n  emailControl : FormControl;\n  pwControl : FormControl;\n\n  constructor(\n    private authService : AuthenticationService,\n    private validService: ValidationService\n  ) { }\n\n  ngOnInit() {\n    this.newuser = {\n      _id      : this.authService.user._id,\n      name     : this.authService.user.name,\n      email    : this.authService.user.email,\n      password : \"\"\n    }\n    this.nameControl  = new FormControl({value: this.authService.user['name'], disabled: true}, {validators:[this.nameValidator.bind(this)], updateOn:'blur'});  \n    this.emailControl = new FormControl({value: this.authService.user['email'], disabled: true}, [this.emailValidator.bind(this)]);  \n    this.pwControl    = new FormControl({value: '', disabled: true}, [this.pwValidator.bind(this)]);\n    this.edit = false;\n    this.response = {\n      success : true,\n      msg     : \"\"\n    }\n  }\n  editMode(state){\n    this.edit = state;\n    if(state){\n      this.nameControl.enable();\n      this.emailControl.enable();\n      this.pwControl.enable();\n    }else{\n      this.nameControl.disable();\n      this.emailControl.disable();\n      this.pwControl.disable();\n      this.nameControl.setValue(this.authService.user['name']);\n      this.emailControl.setValue(this.authService.user['email']);\n      this.pwControl.setValue('');\n    }\n  }\n  isDisabled() {\n    return !this.edit;\n  }\n  submit(){\n    var user = {\n      name      :  this.nameControl.value,\n      email     :  this.emailControl.value,\n      password  :  this.pwControl.value\n    }\n    this.authService.updateUser(user).subscribe(data => {\n      var res = JSON.parse(data._body);\n      if(res.success) {\n        this.editMode(false);\n        this.authService.signin(user).subscribe(data => {\n          var res = JSON.parse(data._body);\n            if(res.success) {\n              this.authService.setSession(res.token);\n              user = null;\n              this.newuser['password'] = \"\";\n              this.pwControl.setValue(\"\");\n            } else {\n              this.response = res;\n            }\n        });\n      } else {\n        this.response = res;\n      }\n    });\n  }\n  nameValidator(control: AbstractControl) {\n    var msg = {name:control.value};\n    return this.validService.checkName(msg)\n    .pipe(  map( response => response.json()),\n            map( val => {\n              return {nameValidator : !val.valid, nameValidatorMsg: val.msg}\n            }),\n    ).subscribe(val => {\n      if(val.nameValidator){\n        control.setErrors(val);\n      }else{\n        control.setErrors(null);\n      }\n    });\n  }\n\n  emailValidator(control: AbstractControl) {\n    var msg = {email:control.value,id:this.authService.user._id};\n    return this.validService.checkEmailOnUpdate(msg)\n    .pipe(  map( response => response.json()),\n            map( val => {\n              return {emailValidator : !val.valid, emailValidatorMsg: val.msg}\n            }),\n    ).subscribe(val => {    \n      if(val.emailValidator){        \n        control.setErrors(val);\n      }else{\n        control.setErrors(null);\n      }\n    });\n  }\n\n  pwValidator(control: AbstractControl) {\n    var msg = {pw:control.value};\n    return this.validService.checkPw(msg)\n    .pipe(  map( response => response.json()),\n            map( val => {\n              return {pwValidator : !val.valid, pwValidatorMsg: val.msg}\n            }),\n    ).subscribe(val => {      \n      if(val.pwValidator){\n        \n        control.setErrors(val);\n      }else{\n        control.setErrors(null);\n      }\n    });\n  }\n}\n","module.exports = \"mat-form-field{\\n    width: 100%\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC9jb21wb25lbnRzL3NpZ251cC9zaWdudXAuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFdBQVc7Q0FDZCIsImZpbGUiOiJhcHAvY29tcG9uZW50cy9zaWdudXAvc2lnbnVwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtZm9ybS1maWVsZHtcbiAgICB3aWR0aDogMTAwJVxufSJdfQ== */\"","module.exports = \"<div class=\\\"container mt-4\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6 offset-md-3\\\">\\n          <form class=\\\"login-form\\\">\\n            <mat-card class=\\\"login-card\\\">\\n                <mat-card-header>                    \\n                    <mat-card-title>Signup</mat-card-title>\\n                  </mat-card-header>\\n                  <mat-card-content>\\n                      <mat-form-field >\\n                            <input matInput placeholder=\\\"Name\\\" [formControl]=\\\"nameControl\\\" required>\\n                            <mat-error *ngIf=\\\"nameControl.hasError('nameValidator')\\\">{{nameControl.errors.nameValidatorMsg}}</mat-error>\\n                        </mat-form-field>                        \\n                        <br>\\n                        <br>                    \\n                        <mat-form-field >\\n                            <input matInput placeholder=\\\"Email\\\" [formControl]=\\\"emailControl\\\" required>\\n                            <mat-error *ngIf=\\\"emailControl.hasError('emailValidator')\\\">{{this.emailControl.errors.emailValidatorMsg}}</mat-error>\\n                        </mat-form-field>  \\n                        <br>\\n                        <br>\\n                        <mat-form-field>\\n                            <input matInput placeholder=\\\"Password\\\" [type]=\\\"!hide ? 'password' : 'text'\\\" [formControl]=\\\"pwControl\\\" required>\\n                            <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{!hide ? 'visibility' : 'visibility_off'}}</mat-icon>\\n                            <mat-error *ngIf=\\\"pwControl.hasError('pwValidator')\\\"><span *ngFor=\\\"let item of pwControl.errors.pwValidatorMsg\\\">{{item}}<br></span></mat-error>   \\n                        </mat-form-field>                              \\n                  </mat-card-content>\\n                  <mat-card-actions align=\\\"end\\\">\\n                    <button  mat-raised-button color=\\\"primary\\\" (click)=\\\"submit()\\\" [disabled]=\\\"!nameControl.valid || !emailControl.valid || !pwControl.valid\\\">create an account</button> \\n                  </mat-card-actions>\\n                  <mat-error *ngFor=\\\"let item of state.msg\\\">{{item}}</mat-error> \\n              </mat-card>\\n            </form>\\n        </div>       \\n    </div>\\n  </div>\\n\\n  <!--\\n      <mat-form-field >\\n                          <input matInput placeholder=\\\"Email\\\" name=\\\"email\\\" [formControl]=\\\"emailControl\\\" required >\\n                          <mat-error *ngIf=\\\"!emailControl.hasError('required') && !emailControl.hasError('emailValidator')\\\">\\n                              use a valid email adress\\n                          </mat-error>\\n                        </mat-form-field>\\n                        <br>\\n                        <br>\\n                        <mat-form-field >\\n                            <input matInput placeholder=\\\"Password\\\" [type]=\\\"!hide ? 'password' : 'text'\\\" name=\\\"password\\\" [formControl]=\\\"pwControl\\\" required >\\n                            <mat-icon matSuffix (click)=\\\"hide = !hide\\\">{{!hide ? 'visibility' : 'visibility_off'}}</mat-icon>\\n                            <mat-error *ngIf=\\\"!pwControl.hasError('required') && !pwControl.hasError('pwValidator')\\\">\\n                                    use a valid password\\n                            </mat-error>\\n                        </mat-form-field>  \\n  -->\"","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\nimport { ValidationService } from 'src/app/services/validation.service';\nimport { Router } from '@angular/router';\nimport { FormControl, AbstractControl } from '@angular/forms';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n  state  : any;\n  nameControl : FormControl;\n  emailControl : FormControl;\n  pwControl : FormControl;\n  \n  constructor(\n    private authService : AuthenticationService,\n    private router      : Router,\n    private validService: ValidationService\n  ) { }\n\n  ngOnInit() {\n    this.nameControl  = new FormControl('', {validators:[this.nameValidator.bind(this)], updateOn:'blur'});  \n    this.emailControl = new FormControl('', [this.emailValidator.bind(this)]);  \n    this.pwControl    = new FormControl('', [this.pwValidator.bind(this)]);\n    this.state = {success:true}\n  }\n\n  submit(){\n    let user = {\n      name      :  this.nameControl.value,\n      email     :  this.emailControl.value,\n      password  :  this.pwControl.value\n    }\n    this.authService.signup(user).subscribe(data => {\n      var res = JSON.parse(data._body);\n      if(res.success) {\n        this.router.navigate(['']);\n      } else {\n        this.state = res;\n      }\n    });\n  }\n\n  nameValidator(control: AbstractControl) {\n    var msg = {name:control.value};\n    return this.validService.checkName(msg)\n    .pipe(  map( response => response.json()),\n            map( val => {\n              return {nameValidator : !val.valid, nameValidatorMsg: val.msg}\n            }),\n    ).subscribe(val => {\n      if(val.nameValidator){\n        control.setErrors(val);\n      }else{\n        control.setErrors(null);\n      }\n    });\n  }\n\n  emailValidator(control: AbstractControl) {\n    var msg = {email:control.value};\n    return this.validService.checkEmail(msg)\n    .pipe(  map( response => response.json()),\n            map( val => {\n              return {emailValidator : !val.valid, emailValidatorMsg: val.msg}\n            }),\n    ).subscribe(val => {      \n      if(val.emailValidator){\n        control.setErrors(val);\n      }else{\n        control.setErrors(null);\n      }\n    });\n  }\n\n  pwValidator(control: AbstractControl) {\n    var msg = {pw:control.value};\n    return this.validService.checkPw(msg)\n    .pipe(  map( response => response.json()),\n            map( val => {\n              return {pwValidator : !val.valid, pwValidatorMsg: val.msg}\n            }),\n    ).subscribe(val => {      \n      if(val.pwValidator){\n        \n        control.setErrors(val);\n      }else{\n        control.setErrors(null);\n      }\n    });\n  }\n}","import { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\nimport { Observable } from 'rxjs';\nimport {JwtHelperService} from '@auth0/angular-jwt';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  token : any;\n  user  : any;\n\n  constructor(\n    private http  : Http,\n    ) { }\n  \n  getUser(){\n    this.loadToken();\n    return this.user;\n  }\n  getToken(){\n    this.loadToken();\n    return this.token;\n  }    \n\n  signin(user):Observable<any> {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('users/signin', user, {headers: headers});\n  }\n  signup(user):Observable<any> {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('users/signup', user, {headers: headers});\n  }\n  setSession(token) {\n    let helper = new JwtHelperService();\n    let decoded = helper.decodeToken(token);\n    localStorage.setItem('id_token', token);\n    localStorage.setItem('user', JSON.stringify(decoded.data));\n    localStorage.setItem\n    this.token = token;\n    this.user = decoded.data;\n  } \n  loadToken() {\n    let token = localStorage.getItem('id_token');\n    let user  = JSON.parse(localStorage.getItem('user'));\n    this.token  = token;\n    this.user   = user;\n  }\n  isLoggedIn(){\n    let helper = new JwtHelperService();\n    this.loadToken();\n    return !helper.isTokenExpired(this.token);\n  } \n  logout() {\n    this.token  = null;\n    this.user   = null;\n    localStorage.clear();\n  }\n  updateUser(newuser):Observable<any> {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', this.token);\n    return this.http.post('users/update', newuser, {headers: headers});\n  }\n  getuser(users):Observable<any> {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', this.token);\n    return this.http.post('users/getprofile', users, {headers: headers});\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\nimport { Observable } from 'rxjs';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\nimport {JwtHelperService} from '@auth0/angular-jwt';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DashboardService {\n\n  constructor(\n    private http  : Http,\n    private authService : AuthenticationService\n  ) { }\n\n  dashboard():Observable<any> {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Authorization', this.authService.getToken());\n    return this.http.post('dashboard/welcome',{}, {headers: headers});\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Http, Headers } from '@angular/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidationService {\n\n  constructor(\n    private http  : Http,\n  ) { }\n\n  checkName(name):Observable<any> {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('users/namevalidator', name, {headers: headers});\n  }\n  checkEmail(email):Observable<any> {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('users/emailvalidator', email, {headers: headers});\n  }\n  checkEmailOnUpdate(email):Observable<any> {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('users/emailonupdatevalidator', email, {headers: headers});\n  }\n  checkPw(pw):Observable<any> {\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    return this.http.post('users/pwvalidator', pw, {headers: headers});\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}